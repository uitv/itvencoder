#
# key/value type configure.
# the configure file is created by encoder customizer, end-user isn't allowed to modify the configure file directly.
# end-user can modify the configure item by web ui or command line tools.
# <type definition>value</type> style value is modifiable.
# types: select option ipaddr number string
#
[server]
# http streaming server
httpstreaming = <var name="streaming address" type="string">0.0.0.0:20119</var>

# http managment server
httpmgmt = <var name="management address" type="string">0.0.0.0:20118</var> # test regex <ipaddr>value</ipaddr>

# log dirctory
logdir = /var/log/itvencoder

# pid file path
pidfile = /var/run/itvencoder.pid

[channel]
test = {
    onboot = <var name="onboot" type="option">yes</var>

    # source pipeline defination
    source = {
        textoverlay = {
            property = {
                text = iTVEncoder-0.2.0
                valign = top
                halign = right
            }
            # option define option element
            option = <var name="textoverlay option" type="option">yes</var>
        }

        # element can be customized by elemment(property=vlue, ...)
        bins = {
            audio = {
                definition = audiotestsrc ! appsink name=audio
                option = <var name="audio source" type="option">yes</var>
            }
            video = {
                definition = videotestsrc ! textoverlay ! clockoverlay ! timeoverlay ! appsink name=video
                option = <var name="video source" type="option">yes</var>
            }
        }
    }

    # encoder pipeline defination
    encoder = {
        encoder1 = {
            videoscale = {
                caps = video/x-raw-yuv,width=<var name="width" type="number">720</var>,height=<var name="height" type="number">576</var>
            }

            # x264 encoder element
            x264enc = {
                property = {
                    bitrate = <var name="bitrate" type="number">1500</var>
                    byte-stream = TRUE
                    threads = <var name="threads" type="number">4</var>
                    bframes = <var name="b frames" type="number">3</var>
                    profile = <var name="profile" type="[baseline, main, high]">high</var>
                }
            }

            # faac audio encoder
            faac = {
                property = {
                    name = faac
                    outputformat = 1
                }
            }

            # mpeg2 ts mux
            mpegtsmux = {
                property = {
                    name = muxer
                }
            }

            # flv mux
            flvmux = {
                property = {
                    name = muxer
                }
            }

            # mux select
            mux = <var name="muxer" type="[mpegtsmux, flv]">mpegtsmux</var>

            bins = {
                video = {
                    definition = appsrc name=video ! videoscale ! x264enc ! muxer.
                }
                audio = {
                    definition = appsrc name=audio ! faac ! muxer.
                }
                muxer = {
                    definition = mpegtsmux name=muxer ! queue ! appsink
                }
            }

            httpstreaming = <var name="http streaming out" type="option">yes</var>
            udpstreaming = <var name="udp streaming out" type="string">224.1.1.1:1111</var>
        }

        encoder2 = {
            bins = {
                videoenc = {
                    definition = appsrc name=video ! videoscale ! vidoecodec ! mux ! appsink name=output
                }
                audioenc = {
                    definition = appsrc name=audio ! faac ! mpegtsmux
                }
            }

            httpstreaming = <var name="http streaming out" type="option">yes</var>
            udpstreaming = <var name="udp streaming out" type="string">224.1.1.2:1111</var>
        }
    }
}

cctvnews = {
    onboot = no

    # source pipeline defination
    source = {
        textoverlay = {
            property = {
                text = iTVEncoder-0.2.0
                valign = top
                halign = right
            }
            # option define option element
            option = <var name="textoverlay option" type="option">yes</var>
        }

        udpsrc = {
            property = {
                #uri = <var name="udpsrc uri" type="string">udp://127.0.0.1:1234</var>
                uri = <var name="udpsrc uri" type="string">udp://239.100.191.8:1234</var>
            }
        }

        mpegtsdemux = {
            property = {
                #es-pids = 0x201;0x26d;0x271;0x44f
                #es-pids = <var name="pids" type="string">0x201;0x26d;0x271;0x44f</var>
                program-number = 133
            }
        }

        appsink = {
            property = {
               sync = FALSE
               drop = TRUE
            }
        }

        # element can be customized by elemment(property=vlue, ...)
        bins = {
            mpegtsdemuxer = {
                # dont link a sometimes pad directly.
                definition = udpsrc ! mpegtsdemux name=demuxer
            }
            video = {
                definition = demuxer.<var name="video pid" type="string">video_0532</var> ! queue ! mpeg2dec ! queue ! appsink
                option = <var name="select video" type="option">yes</var>
            }
            audio1 = {
                definition = demuxer.audio_0533 ! queue ! mad ! queue ! appsink
                option = <var name="select audio1" type="option">yes</var>
            }
            audio2 = {
                definition = demuxer.audio_0271 ! queue ! mad ! queue ! appsink
                option = <var name="select audio2" type="option">no</var>
            }
            subtitle = {
                definition = demuxer.private_044f ! appsink
                option = <var name="select subtitle1" type="option">no</var>
            }
        }
    }

    # encoder pipeline defination
    encoder = {
        encoder1 = {
            appsrc = {
                property = {
                    is-live = TRUE
                }
            }

            videoscale = {
                caps = video/x-raw-yuv,width=<var name="width" type="number">720</var>,height=<var name="height" type="number">576</var>
            }

            # x264 encoder element
            x264enc = {
                property = {
                    name = x264enc
                    bitrate = <var name="bitrate" type="number">800</var>
                    byte-stream = TRUE
                    threads = <var name="threads" type="number">4</var>
                    bframes = <var name="b frames" type="number">3</var>
                    profile = <var name="profile" type="[baseline, main, high]">high</var>
                }
            }

            # faac audio encoder
            faac = {
                property = {
                    name = faac
                    outputformat = 1
                }
            }

            # mpeg2 ts mux
            mpegtsmux = {
                property = {
                    name = muxer
                }
            }

            # flv mux
            flvmux = {
                property = {
                    name = muxer
                }
            }

            appsink = {
                property = {
                    sync = FALSE
                }
            }

            # mux select
            mux = <var name="muxer select" type="[mpegtsmux, flv]">mpegtsmux</var>

            bins = {
                video = {
                    definition = appsrc name=video ! queue ! x264enc ! queue ! muxer.
                    option = <var name="select video" type="option">yes</var>
                }
                audio1 = {
                    definition = appsrc name=audio1 ! queue ! audioconvert ! queue ! faac name=faac1 ! queue ! muxer.
                    option = <var name="select audio1" type="option">yes</var>
                }
                audio2 = {
                    definition = appsrc name=audio2 ! queue ! audioconvert ! queue ! faac name=faac2 ! queue ! muxer.
                    option = <var name="select audio2" type="option">no</var>
                }
                muxer = {
                    definition = mpegtsmux name=muxer ! queue ! appsink
                }
            }
            httpstreaming = <var name="http streaming out" type="option">yes</var>
            udpstreaming = <var name="udp streaming out" type="option">224.1.1.1:1111</var>
        }
    }
}

mpegtsoverip = {
    onboot = no

    # source pipeline defination
    source = {
        textoverlay = {
            property = {
                text = iTVEncoder-0.2.0
                valign = top
                halign = right
            }
            # option define option element
            option = <var name="textoverlay option" type="option">yes</var>
        }

        udpsrc = {
            property = {
                uri = <var name="udpsrc uri" type="string">udp://127.0.0.1:1234</var>
                #uri = <var name="udpsrc uri" type="string">udp://239.100.191.8:1234</var>
            }
        }

        mpegtsdemux = {
            property = {
                #es-pids = 0x201;0x26d;0x271;0x44f
                #es-pids = <var name="pids" type="string">0x201;0x26d;0x271;0x44f</var>
                program-number = 1331
            }
        }

        appsink = {
            property = {
               sync = FALSE
               drop = TRUE
            }
        }

        # element can be customized by elemment(property=vlue, ...)
        bins = {
            mpegtsdemuxer = {
                # dont link a sometimes pad directly.
                definition = udpsrc ! mpegtsdemux name=demuxer
            }
            video = {
                definition = demuxer.<var name="video pid" type="string">video_0201</var> ! queue ! h264dec ! queue ! appsink
                option = <var name="select video" type="option">yes</var>
            }
            audio1 = {
                definition = demuxer.audio_026d ! queue ! mad ! queue ! appsink
                option = <var name="select audio1" type="option">yes</var>
            }
            audio2 = {
                definition = demuxer.audio_0271 ! queue ! mad ! queue ! appsink
                option = <var name="select audio2" type="option">yes</var>
            }
            subtitle = {
                definition = demuxer.private_044f ! appsink
                option = <var name="select subtitle1" type="option">no</var>
            }
        }
    }

    # encoder pipeline defination
    encoder = {
        encoder1 = {
            appsrc = {
                property = {
                    is-live = TRUE
                }
            }

            videoscale = {
                caps = video/x-raw-yuv,width=<var name="width" type="number">720</var>,height=<var name="height" type="number">576</var>
            }

            # x264 encoder element
            x264enc = {
                property = {
                    name = x264enc
                    bitrate = <var name="bitrate" type="number">800</var>
                    byte-stream = TRUE
                    threads = <var name="threads" type="number">4</var>
                    bframes = <var name="b frames" type="number">3</var>
                    profile = <var name="profile" type="[baseline, main, high]">high</var>
                }
            }

            # faac audio encoder
            faac = {
                property = {
                    name = faac
                    outputformat = 1
                }
            }

            # mpeg2 ts mux
            mpegtsmux = {
                property = {
                    name = muxer
                }
            }

            # flv mux
            flvmux = {
                property = {
                    name = muxer
                }
            }

            appsink = {
                property = {
                    sync = FALSE
                }
            }

            # mux select
            mux = <var name="muxer select" type="[mpegtsmux, flv]">mpegtsmux</var>

            bins = {
                video = {
                    definition = appsrc name=video ! queue ! x264enc ! queue ! muxer.
                    option = <var name="select video" type="option">yes</var>
                }
                audio1 = {
                    definition = appsrc name=audio1 ! queue ! audioconvert ! queue ! faac name=faac1 ! queue ! muxer.
                    option = <var name="select audio1" type="option">yes</var>
                }
                audio2 = {
                    definition = appsrc name=audio2 ! queue ! audioconvert ! queue ! faac name=faac2 ! queue ! muxer.
                    option = <var name="select audio2" type="option">yes</var>
                }
                muxer = {
                    definition = mpegtsmux name=muxer ! queue ! appsink
                }
            }
            httpstreaming = <var name="http streaming out" type="option">yes</var>
            udpstreaming = <var name="udp streaming out" type="option">224.1.1.1:1111</var>
        }
    }
}
