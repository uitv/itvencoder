#
# key/value type configure.
# the configure file is created by encoder customizer, end-user isn't allowed to modify the configure file directly.
# end-user can modify the configure item by web ui or command line tools.
# <type description>value</type> style value is modifiable.
# types: select option ipaddr number string
#
[server]
# http streaming server
httpstreaming = <ipaddr http streaming ip address>0.0.0.0:20129</ipaddr>

# http managment server
httpmgmt = <ipaddr http management ip address>0.0.0.0:20128</ipaddr> # test regex <ipaddr>value</ipaddr>

# log dirctory
logdir = /var/log/itvencoder

# pid file path
pidfile = /var/run/itvencoder.pid

[channel]
test = {
    onboot = yes

    # source pipeline defination
    source = {
        textoverlay = {
            property = {
                text = iTVEncoder-0.2.0
                valign = top
                halign = right
            }
            # option define option element
            option = <option if textoverlay>true</option>
        }

        # element can be customized by elemment(property=vlue, ...)
        bin = {
            audiosrc = [audiotestsrc, appsink(name=audio)]
            videosrc = [videotestsrc, clockoverlay, timeoverlay, textoverlay, videocodec, appsink(name=video)]
        }
        pipeline = [videosrc, audiosrc]
    }

    # encoder pipeline defination
    encoder = {
        encoder1 = {
            videoscale = {
                caps = video/x-raw-yuv,width=<number>720</number>,height=<number>576</number>
            }

            # x264 encoder element
            x264enc = {
                name = x264enc
                bitrate = <number h.264 encoder bitrate>1500</number>
                byte-stream = true
                threads = <number encoder theads number>4</number>
                bframes = <number b frame number>3</number>
                profile = <string encoder profile>high</string>
            }

            # faac audio encoder
            faac = {
                property = {
                    name = faac
                    outputformat = 1
                }
            }

            # mpeg2 ts mux
            mpegtsmux = {
                property = {
                    name = muxer
                }
            }

            # flv mux
            flvmux = {
                property = {
                    name = muxer
                }
            }

            # mux select
            mux = <select[mpegtsmux, flv] select mux>mpegtsmux</select>

            bin = {
                videoenc = [appsrc(name=video), videoscale, x264enc, mux, appsink(name=output)]
                audioenc = [appsrc(name=audio), faac, mpegtsmux]
            }
            pipeline = [videoenc, audioenc]
            httpstreaming = <option>true</option>
            udpstreaming = <ipaddr udp output address>224.1.1.1:1111</ipaddr>
        }

        encoder2 = {
            bin = {
                videoenc = [appsrc(name=video), videoscale, vidoecodec, mux, appsink(name=output)]
                audioenc = [appsrc(name=audio), faac, mpegtsmux]
            }
            pipeline = [videoenc, audioenc]
            httpstreaming = <option http streaming support>true</option>
            udpstreaming = <ipaddr udp streaming address>224.1.1.2:1111</ipaddr>
        }
    }
}

cctv0 = {
    onboot = yes

    # source pipeline defination
    source = {
        textoverlay = {
            property = {
                text = iTVEncoder-0.2.0
                valign = top
                halign = right
            }
            # option define option element
            option = <option if textoverlay>true</option>
        }

        # element can be customized by elemment(property=vlue, ...)
        bin = {
            audiosrc = [audiotestsrc, appsink(name=audio)]
            videosrc = [videotestsrc, clockoverlay, timeoverlay, textoverlay, videocodec, appsink(name=video)]
        }
        pipeline = [videosrc, audiosrc]
    }

    # encoder pipeline defination
    encoder = {
        encoder1 = {
            videoscale = {
                caps = video/x-raw-yuv,width=<number>720</number>,height=<number>576</number>
            }

            # x264 encoder element
            x264enc = {
                property = {
                    name = x264enc
                    bitrate = <number h.264 encoder bitrate>1500</number>
                    byte-stream = true
                    threads = <number encoder theads number>4</number>
                    bframes = <number b frame number>3</number>
                    profile = <string encoder profile>high</string>
                }
            }

            # faac audio encoder
            faac = {
                property = {
                    name = faac
                    outputformat = 1
                }
            }

            # mpeg2 ts mux
            mpegtsmux = {
                property = {
                    name = muxer
                }
            }

            # flv mux
            flvmux = {
                property = {
                    name = muxer
                }
            }

            # mux select
            mux = <select[mpegtsmux, flv] select mux>mpegtsmux</select>

            bin = {
                videoenc = [appsrc(name=video), videoscale, x264enc, mux, appsink(name=output)]
                audioenc = [appsrc(name=audio), faac, mpegtsmux]
            }
            pipeline = [videoenc, audioenc]
            httpstreaming = <option>true</option>
            udpstreaming = <ipaddr udp output address>224.1.1.1:1111</ipaddr>
        }

        encoder2 = {
            bin = {
                videoenc = [appsrc(name=video), videoscale, vidoecodec, mpegtsmux, appsink(name=output)]
                audioenc = [appsrc(name=audio), faac, mpegtsmux]
            }
            pipeline = [videoenc, audioenc]
            httpstreaming = <option http streaming support>true</option>
            udpstreaming = <ipaddr udp streaming address>224.1.1.2:1111</ipaddr>
        }
    }
}
